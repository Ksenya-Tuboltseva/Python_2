##Дан список повторяющихся элементов. Вернуть список с дублирующимися элементами. В результирующем списке не должно быть дубликатов
lst = [1, 3, 90, 467, 3, "and", 3, 67, "be", "and", "*"]
new_lst = []

for item in lst:
    if lst.count(item) > 1:
        new_lst.append(item)

for it in new_lst:
    while new_lst.count(it) > 1:
        new_lst.remove(it)
      
print(new_lst)

##В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых. Не учитывать знаки препинания и регистр символов. За основу возьмите любую статью из википедии или из документации к языку.
str = "Этот гигантский грызун представляет собой жирного зверька с продолговатым телом, покрытым жёсткой лохматой шерстью пёстрой коричневой расцветки. Передние лапы у капибары длиннее задних, массивный огузок не имеет хвоста, и поэтому у неё всегда такой вид, будто она вот-вот собирается сесть. У неё крупные лапы с широкими перепончатыми пальцами, а когти на передних лапах, короткие и тупые, удивительно напоминают миниатюрные копыта. Вид у неё весьма аристократический: её плоская широкая голова и тупая, почти квадратная морда имеют благодушно-покровительственное выражение, придающее ей сходство с задумчивым львом. По земле капибара передвигается характерной шаркающей походкой или скачет вразвалку галопом, в воде же плавает и ныряет с поразительной лёгкостью и проворством. Капибара — флегматичный добродушный вегетарианец, лишённый ярких индивидуальных черт, присущих некоторым его сородичам, но этот недостаток восполняется у неё спокойным и дружелюбным нравом."
import re
lst = re.split(r'[^\w]+', str.lower())

word_count = len(set(lst))

word_dic = {}
for item in lst:
    if item in word_dic:
        word_dic[item] += 1
    else: 
        word_dic[item] = 1

word_dic = sorted(word_dic.items(), key=lambda x: x[1])

for i in range(1, 11):
    print(word_dic[-i][0])

##Создайте словарь со списком вещей для похода в качестве ключа и их массой в качестве значения. Определите какие вещи влезут в рюкзак передав его максимальную грузоподъёмность. Достаточно вернуть один допустимый вариант.*Верните все возможные варианты комплектации рюкзака.
bag = {"палатка": 15, "тушенка": 3, "удочка": 2, "котел": 3, "вода": 6, "полотенце": 0.2, "дождевик": 0.3, "нож": 0.4, "веревка": 5, "фонарь":0.2}
max_weight = 30
weight = 0
bag_lst = []
for key, val in bag.items():
    if weight <= max_weight:
        weight += bag[key]
        if weight <= max_weight:
            bag_lst.append(key)

print(bag_lst)
        


